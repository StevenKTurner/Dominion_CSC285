/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Zach
 */
public class FreebieStorePanel extends StorePanel {

    //freebieValue needs to be accessed from the ActionRemodel 
    Store store;
    Player player;
    Card card;
    GameManager gm;
    View view;
    /**
     * Creates new form StorePanelPanel
     */
    public FreebieStorePanel(View view) {
        this.view = view;
        gm = view.getGameManager();
        player = gm.getActivePlayer();
        store = gm.getStore();
        initComponents();
        updateLabels();
    }
    
    private void removeCard(Card card){
        if ((gm.getActivePlayer().getFreebieValue() >= card.getCost()) && gm.getStore().cardInStock(card))
        {
            player.getDiscardPile().add(card);
            store.removeCard(card);
            gm.getActivePlayer().playerTurn = Player.Turn.ACTION;
            view.update();
        }
    }
    
    private void updateLabels(){
        villageLabel.setText("Villages Left: " + store.villageStack.size());
        smithyLabel.setText("Smithys Left: " + store.smithyStack.size());
        provinceLabel.setText("Provinces Left: " + store.provinceStack.size());
        workshopLabel.setText("Workshops Left: " + store.workshopStack.size());
        cellarLabel.setText("Cellars Left: " + store.cellarStack.size());
        woodcutterLabel.setText("Woodcutters Left: " + store.woodcutterStack.size());
        remodelLabel.setText("Remodels Left: " + store.remodelStack.size());
        militiaLabel.setText("Militias Left: " + store.militiaStack.size());
        marketLabel.setText("Markets Left: " + store.marketStack.size());
        mineLabel.setText("Mines Left: " + store.mineStack.size());
        estateLabel.setText("Estates Left: " + store.estateStack.size());
        duchyLabel.setText("Duchys Left: " + store.dutchyStack.size());
        moatLabel.setText("Moats Left: " + store.moatStack.size());
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        smithyPanel = new javax.swing.JPanel();
        gainSmithyButton = new javax.swing.JButton();
        smithyLabel = new javax.swing.JLabel();
        smithyImageLabel = new javax.swing.JLabel();
        MilitiaPanel = new javax.swing.JPanel();
        gainMilitiaButton = new javax.swing.JButton();
        militiaLabel = new javax.swing.JLabel();
        militiaImageLabel = new javax.swing.JLabel();
        remodelPanel = new javax.swing.JPanel();
        gainRemodelButton = new javax.swing.JButton();
        remodelLabel = new javax.swing.JLabel();
        remodelImageIcon = new javax.swing.JLabel();
        marketPanel = new javax.swing.JPanel();
        gainMarketButton = new javax.swing.JButton();
        marketLabel = new javax.swing.JLabel();
        marketsImageLabel = new javax.swing.JLabel();
        minePanel = new javax.swing.JPanel();
        gainMineButton = new javax.swing.JButton();
        mineLabel = new javax.swing.JLabel();
        mineImageLabel = new javax.swing.JLabel();
        moatPanel = new javax.swing.JPanel();
        gainMoatButton = new javax.swing.JButton();
        moatLabel = new javax.swing.JLabel();
        moatImageLabel = new javax.swing.JLabel();
        cellarPanel = new javax.swing.JPanel();
        gainCellarButton = new javax.swing.JButton();
        cellarLabel = new javax.swing.JLabel();
        cellarImageLabel = new javax.swing.JLabel();
        villagePanel = new javax.swing.JPanel();
        gainVillageButton = new javax.swing.JButton();
        villageLabel = new javax.swing.JLabel();
        villageImageLabel = new javax.swing.JLabel();
        workshopPanel = new javax.swing.JPanel();
        gainWorkshopButton = new javax.swing.JButton();
        workshopLabel = new javax.swing.JLabel();
        workshopImageLabel = new javax.swing.JLabel();
        woodcutterPanel = new javax.swing.JPanel();
        gainWoodcutterButton = new javax.swing.JButton();
        woodcutterLabel = new javax.swing.JLabel();
        woodcutterImageLabel = new javax.swing.JLabel();
        copperPanel = new javax.swing.JPanel();
        gainCopperButton = new javax.swing.JButton();
        copperImageLabel = new javax.swing.JLabel();
        silverPanel = new javax.swing.JPanel();
        gainSilverButton = new javax.swing.JButton();
        silverImageLabel = new javax.swing.JLabel();
        goldPanel = new javax.swing.JPanel();
        gainGoldButton = new javax.swing.JButton();
        goldImageLabel = new javax.swing.JLabel();
        provincePanel = new javax.swing.JPanel();
        gainProvinceButton = new javax.swing.JButton();
        provinceLabel = new javax.swing.JLabel();
        provinceImageLabel = new javax.swing.JLabel();
        duchyPanel = new javax.swing.JPanel();
        gainDuchyButton = new javax.swing.JButton();
        duchyLabel = new javax.swing.JLabel();
        duchyImageLabel = new javax.swing.JLabel();
        estatePanel = new javax.swing.JPanel();
        gainEstateButton = new javax.swing.JButton();
        estateLabel = new javax.swing.JLabel();
        estateImageLabel = new javax.swing.JLabel();

        setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));

        gainSmithyButton.setText("Gain for Free");
        gainSmithyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gainSmithyButtonActionPerformed(evt);
            }
        });

        smithyLabel.setText("Smithys Left: 10");

        smithyImageLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/smithy.jpg"))); // NOI18N

        javax.swing.GroupLayout smithyPanelLayout = new javax.swing.GroupLayout(smithyPanel);
        smithyPanel.setLayout(smithyPanelLayout);
        smithyPanelLayout.setHorizontalGroup(
            smithyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(smithyPanelLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(smithyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(smithyImageLabel)
                    .addGroup(smithyPanelLayout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(smithyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(gainSmithyButton)
                            .addGroup(smithyPanelLayout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(smithyLabel)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        smithyPanelLayout.setVerticalGroup(
            smithyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, smithyPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(smithyImageLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(gainSmithyButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(smithyLabel)
                .addGap(28, 28, 28))
        );

        gainMilitiaButton.setText("Gain for Free");
        gainMilitiaButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gainMilitiaButtonActionPerformed(evt);
            }
        });

        militiaLabel.setText("Militias Left: 10");

        militiaImageLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/militia.jpg"))); // NOI18N

        javax.swing.GroupLayout MilitiaPanelLayout = new javax.swing.GroupLayout(MilitiaPanel);
        MilitiaPanel.setLayout(MilitiaPanelLayout);
        MilitiaPanelLayout.setHorizontalGroup(
            MilitiaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, MilitiaPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(MilitiaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(gainMilitiaButton)
                    .addGroup(MilitiaPanelLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(militiaLabel)))
                .addGap(52, 52, 52))
            .addGroup(MilitiaPanelLayout.createSequentialGroup()
                .addComponent(militiaImageLabel)
                .addGap(0, 20, Short.MAX_VALUE))
        );
        MilitiaPanelLayout.setVerticalGroup(
            MilitiaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, MilitiaPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(militiaImageLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(gainMilitiaButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(militiaLabel)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        gainRemodelButton.setText("Gain for Free");
        gainRemodelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gainRemodelButtonActionPerformed(evt);
            }
        });

        remodelLabel.setText("Remodels Left: 10");

        remodelImageIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/remodel.jpg"))); // NOI18N

        javax.swing.GroupLayout remodelPanelLayout = new javax.swing.GroupLayout(remodelPanel);
        remodelPanel.setLayout(remodelPanelLayout);
        remodelPanelLayout.setHorizontalGroup(
            remodelPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(remodelPanelLayout.createSequentialGroup()
                .addGroup(remodelPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(remodelImageIcon)
                    .addGroup(remodelPanelLayout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(remodelPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(remodelLabel)
                            .addComponent(gainRemodelButton))))
                .addContainerGap(13, Short.MAX_VALUE))
        );
        remodelPanelLayout.setVerticalGroup(
            remodelPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, remodelPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(remodelImageIcon)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(gainRemodelButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(remodelLabel)
                .addContainerGap(28, Short.MAX_VALUE))
        );

        gainMarketButton.setText("Gain for Free");
        gainMarketButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gainMarketButtonActionPerformed(evt);
            }
        });

        marketLabel.setText("Markets Left: 10");

        marketsImageLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/market.jpg"))); // NOI18N

        javax.swing.GroupLayout marketPanelLayout = new javax.swing.GroupLayout(marketPanel);
        marketPanel.setLayout(marketPanelLayout);
        marketPanelLayout.setHorizontalGroup(
            marketPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(marketPanelLayout.createSequentialGroup()
                .addComponent(marketsImageLabel)
                .addGap(0, 20, Short.MAX_VALUE))
            .addGroup(marketPanelLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(marketPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(gainMarketButton)
                    .addGroup(marketPanelLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(marketLabel)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        marketPanelLayout.setVerticalGroup(
            marketPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, marketPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(marketsImageLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(gainMarketButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(marketLabel)
                .addGap(23, 23, 23))
        );

        gainMineButton.setText("Gain for Free");
        gainMineButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gainMineButtonActionPerformed(evt);
            }
        });

        mineLabel.setText("Mines Left: 10");

        mineImageLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mine.jpg"))); // NOI18N

        javax.swing.GroupLayout minePanelLayout = new javax.swing.GroupLayout(minePanel);
        minePanel.setLayout(minePanelLayout);
        minePanelLayout.setHorizontalGroup(
            minePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(minePanelLayout.createSequentialGroup()
                .addComponent(mineImageLabel)
                .addGap(0, 20, Short.MAX_VALUE))
            .addGroup(minePanelLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(minePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(minePanelLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(mineLabel))
                    .addComponent(gainMineButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        minePanelLayout.setVerticalGroup(
            minePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, minePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(mineImageLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(gainMineButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(mineLabel)
                .addContainerGap(25, Short.MAX_VALUE))
        );

        gainMoatButton.setText("Gain for Free");
        gainMoatButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gainMoatButtonActionPerformed(evt);
            }
        });

        moatLabel.setText("Moats Left: 10");

        moatImageLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/moat.jpg"))); // NOI18N

        javax.swing.GroupLayout moatPanelLayout = new javax.swing.GroupLayout(moatPanel);
        moatPanel.setLayout(moatPanelLayout);
        moatPanelLayout.setHorizontalGroup(
            moatPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(moatPanelLayout.createSequentialGroup()
                .addGroup(moatPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(moatPanelLayout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addGroup(moatPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(gainMoatButton)
                            .addGroup(moatPanelLayout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(moatLabel))))
                    .addGroup(moatPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(moatImageLabel)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        moatPanelLayout.setVerticalGroup(
            moatPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, moatPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(moatImageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 234, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(gainMoatButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(moatLabel)
                .addContainerGap())
        );

        gainCellarButton.setText("Gain for Free");
        gainCellarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gainCellarButtonActionPerformed(evt);
            }
        });

        cellarLabel.setText("Cellars Left: 10");

        cellarImageLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cellar.jpg"))); // NOI18N

        javax.swing.GroupLayout cellarPanelLayout = new javax.swing.GroupLayout(cellarPanel);
        cellarPanel.setLayout(cellarPanelLayout);
        cellarPanelLayout.setHorizontalGroup(
            cellarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cellarPanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(cellarImageLabel)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, cellarPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(cellarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(gainCellarButton)
                    .addGroup(cellarPanelLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(cellarLabel)))
                .addGap(32, 32, 32))
        );
        cellarPanelLayout.setVerticalGroup(
            cellarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, cellarPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cellarImageLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(gainCellarButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cellarLabel)
                .addContainerGap(12, Short.MAX_VALUE))
        );

        gainVillageButton.setText("Gain for Free");
        gainVillageButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gainVillageButtonActionPerformed(evt);
            }
        });

        villageLabel.setText("Villages Left: 10");

        villageImageLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/village.jpg"))); // NOI18N

        javax.swing.GroupLayout villagePanelLayout = new javax.swing.GroupLayout(villagePanel);
        villagePanel.setLayout(villagePanelLayout);
        villagePanelLayout.setHorizontalGroup(
            villagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(villagePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(villageImageLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, villagePanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(villagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(gainVillageButton)
                    .addGroup(villagePanelLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(villageLabel)))
                .addGap(41, 41, 41))
        );
        villagePanelLayout.setVerticalGroup(
            villagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, villagePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(villageImageLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(gainVillageButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(villageLabel)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        gainWorkshopButton.setText("Gain for Free");
        gainWorkshopButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gainWorkshopButtonActionPerformed(evt);
            }
        });

        workshopLabel.setText("Workshops Left: 10");

        workshopImageLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/workshop.jpg"))); // NOI18N

        javax.swing.GroupLayout workshopPanelLayout = new javax.swing.GroupLayout(workshopPanel);
        workshopPanel.setLayout(workshopPanelLayout);
        workshopPanelLayout.setHorizontalGroup(
            workshopPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(workshopPanelLayout.createSequentialGroup()
                .addGroup(workshopPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(workshopPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(workshopImageLabel))
                    .addGroup(workshopPanelLayout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addGroup(workshopPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(gainWorkshopButton)
                            .addComponent(workshopLabel))))
                .addContainerGap(12, Short.MAX_VALUE))
        );
        workshopPanelLayout.setVerticalGroup(
            workshopPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, workshopPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(workshopImageLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(gainWorkshopButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(workshopLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        gainWoodcutterButton.setText("Gain for Free");
        gainWoodcutterButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gainWoodcutterButtonActionPerformed(evt);
            }
        });

        woodcutterLabel.setText("Woodcutters Left: 10");

        woodcutterImageLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/woodcutter.jpg"))); // NOI18N

        javax.swing.GroupLayout woodcutterPanelLayout = new javax.swing.GroupLayout(woodcutterPanel);
        woodcutterPanel.setLayout(woodcutterPanelLayout);
        woodcutterPanelLayout.setHorizontalGroup(
            woodcutterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(woodcutterPanelLayout.createSequentialGroup()
                .addGroup(woodcutterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(woodcutterPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(woodcutterImageLabel))
                    .addGroup(woodcutterPanelLayout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(woodcutterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(gainWoodcutterButton)
                            .addComponent(woodcutterLabel))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        woodcutterPanelLayout.setVerticalGroup(
            woodcutterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, woodcutterPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(woodcutterImageLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(gainWoodcutterButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(woodcutterLabel)
                .addGap(37, 37, 37))
        );

        gainCopperButton.setFont(new java.awt.Font("Tahoma", 0, 9)); // NOI18N
        gainCopperButton.setText("Gain for Free");
        gainCopperButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gainCopperButtonActionPerformed(evt);
            }
        });

        copperImageLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/copperSmall.jpg"))); // NOI18N

        javax.swing.GroupLayout copperPanelLayout = new javax.swing.GroupLayout(copperPanel);
        copperPanel.setLayout(copperPanelLayout);
        copperPanelLayout.setHorizontalGroup(
            copperPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(copperPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(copperPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(gainCopperButton)
                    .addComponent(copperImageLabel))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        copperPanelLayout.setVerticalGroup(
            copperPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, copperPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(copperImageLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(gainCopperButton)
                .addGap(20, 20, 20))
        );

        gainSilverButton.setFont(new java.awt.Font("Tahoma", 0, 9)); // NOI18N
        gainSilverButton.setText("Gain for Free");
        gainSilverButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gainSilverButtonActionPerformed(evt);
            }
        });

        silverImageLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/silverSmall.jpg"))); // NOI18N

        javax.swing.GroupLayout silverPanelLayout = new javax.swing.GroupLayout(silverPanel);
        silverPanel.setLayout(silverPanelLayout);
        silverPanelLayout.setHorizontalGroup(
            silverPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(silverPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(silverPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(silverImageLabel)
                    .addComponent(gainSilverButton))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        silverPanelLayout.setVerticalGroup(
            silverPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, silverPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(silverImageLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(gainSilverButton)
                .addGap(20, 20, 20))
        );

        goldPanel.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        gainGoldButton.setFont(new java.awt.Font("Tahoma", 0, 9)); // NOI18N
        gainGoldButton.setText("Gain for Free");
        gainGoldButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gainGoldButtonActionPerformed(evt);
            }
        });

        goldImageLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/goldSmall.jpg"))); // NOI18N

        javax.swing.GroupLayout goldPanelLayout = new javax.swing.GroupLayout(goldPanel);
        goldPanel.setLayout(goldPanelLayout);
        goldPanelLayout.setHorizontalGroup(
            goldPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(goldPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(goldPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(goldImageLabel)
                    .addComponent(gainGoldButton))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        goldPanelLayout.setVerticalGroup(
            goldPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, goldPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(goldImageLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(gainGoldButton)
                .addGap(36, 36, 36))
        );

        gainProvinceButton.setFont(new java.awt.Font("Tahoma", 0, 9)); // NOI18N
        gainProvinceButton.setText("Gain for Free");
        gainProvinceButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gainProvinceButtonActionPerformed(evt);
            }
        });

        provinceLabel.setText("Provincess Left: 12");

        provinceImageLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/provinceSmall.jpg"))); // NOI18N

        javax.swing.GroupLayout provincePanelLayout = new javax.swing.GroupLayout(provincePanel);
        provincePanel.setLayout(provincePanelLayout);
        provincePanelLayout.setHorizontalGroup(
            provincePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(provincePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(provincePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(provinceImageLabel)
                    .addComponent(provinceLabel)
                    .addComponent(gainProvinceButton))
                .addContainerGap(19, Short.MAX_VALUE))
        );
        provincePanelLayout.setVerticalGroup(
            provincePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, provincePanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(provinceImageLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(gainProvinceButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(provinceLabel)
                .addGap(22, 22, 22))
        );

        gainDuchyButton.setFont(new java.awt.Font("Tahoma", 0, 9)); // NOI18N
        gainDuchyButton.setText("Gain for Free");
        gainDuchyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gainDuchyButtonActionPerformed(evt);
            }
        });

        duchyLabel.setText("Duchys Left: 12");

        duchyImageLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/duchySmall.jpg"))); // NOI18N

        javax.swing.GroupLayout duchyPanelLayout = new javax.swing.GroupLayout(duchyPanel);
        duchyPanel.setLayout(duchyPanelLayout);
        duchyPanelLayout.setHorizontalGroup(
            duchyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(duchyPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(duchyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(duchyLabel)
                    .addComponent(duchyImageLabel)
                    .addComponent(gainDuchyButton))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        duchyPanelLayout.setVerticalGroup(
            duchyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, duchyPanelLayout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addComponent(duchyImageLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(gainDuchyButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(duchyLabel))
        );

        gainEstateButton.setFont(new java.awt.Font("Tahoma", 0, 9)); // NOI18N
        gainEstateButton.setText("Gain for Free");
        gainEstateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gainEstateButtonActionPerformed(evt);
            }
        });

        estateLabel.setText("Estates Left: 12");

        estateImageLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/estateSmall.jpg"))); // NOI18N

        javax.swing.GroupLayout estatePanelLayout = new javax.swing.GroupLayout(estatePanel);
        estatePanel.setLayout(estatePanelLayout);
        estatePanelLayout.setHorizontalGroup(
            estatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(estatePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(estatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(estateImageLabel)
                    .addComponent(estateLabel)
                    .addComponent(gainEstateButton))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        estatePanelLayout.setVerticalGroup(
            estatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, estatePanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(estateImageLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(gainEstateButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(estateLabel)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(remodelPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(smithyPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(MilitiaPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(marketPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(minePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(moatPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cellarPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(villagePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(workshopPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(woodcutterPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(71, 71, 71)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(copperPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(silverPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(goldPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(provincePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(duchyPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(estatePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(553, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(9, 9, 9)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cellarPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(woodcutterPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(moatPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(villagePanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(workshopPanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(29, 29, 29)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(estatePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(copperPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(minePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(marketPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(remodelPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(smithyPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(MilitiaPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(225, 225, 225)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(silverPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(duchyPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(provincePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(goldPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(38, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    
    //**************
    // ActionListeners for buttons
    // *************
    
    private void gainVillageButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gainVillageButtonActionPerformed
//        card = new Village();
//        if ((gm.getActivePlayer().getFreebieValue() <= card.getCost()) && gm.getStore().cardInStock(card))
//        {
//            player.discard(card);
            //store.villageStack.remove(store.villageStack.size()-1);
            //villageLabel.setText("Villages Left: " + store.villageStack.size());
//        }
        removeCard(new Village());
    }//GEN-LAST:event_gainVillageButtonActionPerformed

    private void gainSmithyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gainSmithyButtonActionPerformed
//        card = new Smithy();
//        if (gm.getActivePlayer().getFreebieValue() <= card.getCost())
//        {
//            player.discard(card);
//            store.smithyStack.remove(store.smithyStack.size()-1);
//            smithyLabel.setText("Smithys Left: " + store.smithyStack.size());
//        }
        removeCard(new Smithy());
    }//GEN-LAST:event_gainSmithyButtonActionPerformed


    private void gainProvinceButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gainProvinceButtonActionPerformed
//       card = new Province();
//        if (gm.getActivePlayer().getFreebieValue() <= card.getCost())
//        {
//            player.discard(card);
//            store.provinceStack.remove(store.provinceStack.size()-1);
//            provinceLabel.setText("Provinces Left: " + store.provinceStack.size());
//        }
        removeCard(new Province());
    }//GEN-LAST:event_gainProvinceButtonActionPerformed

    
    private void gainSilverButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gainSilverButtonActionPerformed
//        card = new Silver();
//        if (gm.getActivePlayer().getFreebieValue() <= card.getCost())
//        {
//            player.getDiscardPile().add(card);
//            
//        }
        //We're not keeping track of the amount of treasure cards, so there is
        //no label to update to display the amount of silver cards remaining.
        removeCard(new Silver());
    }//GEN-LAST:event_gainSilverButtonActionPerformed

    private void gainGoldButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gainGoldButtonActionPerformed
//        card = new Gold();
//        if (freebieValue <= card.getCost())
//        {
//            player.discard(card);
//        }
        //No label
        removeCard(new Gold());
    }//GEN-LAST:event_gainGoldButtonActionPerformed

    private void gainWorkshopButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gainWorkshopButtonActionPerformed
//       card = new Workshop();
//        if (freebieValue <= card.getCost())
//        {
//            player.discard(card);
//            store.workshopStack.remove(store.workshopStack.size()-1);
//            workshopLabel.setText("Workshops Left: " + store.workshopStack.size());
//        }
        removeCard(new Workshop());
    }//GEN-LAST:event_gainWorkshopButtonActionPerformed

    private void gainCellarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gainCellarButtonActionPerformed
//        card = new Cellar();
//        if (freebieValue <= card.getCost())
//        {
//            player.discard(card);
//            store.cellarStack.remove(store.cellarStack.size()-1);
//            cellarLabel.setText("Cellars Left: " + store.cellarStack.size());
//        }
        removeCard(new Cellar());
    }//GEN-LAST:event_gainCellarButtonActionPerformed

    private void gainWoodcutterButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gainWoodcutterButtonActionPerformed
//        card = new Woodcutter();
//        if (freebieValue <= card.getCost())
//        {
//            player.discard(card);
//            store.woodcutterStack.remove(store.woodcutterStack.size()-1);
//            woodcutterLabel.setText("Woodcutters Left: " + store.woodcutterStack.size());
//        }
        removeCard(new Woodcutter());
    }//GEN-LAST:event_gainWoodcutterButtonActionPerformed

    private void gainRemodelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gainRemodelButtonActionPerformed
//       card = new Remodel();
//        if (freebieValue <= card.getCost())
//        {
//            player.discard(card);
//            store.remodelStack.remove(store.remodelStack.size()-1);
//            remodelLabel.setText("Remodels Left: " + store.remodelStack.size());
//        }
        removeCard(new Remodel());
    }//GEN-LAST:event_gainRemodelButtonActionPerformed

    private void gainMilitiaButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gainMilitiaButtonActionPerformed
//        card = new Militia();
//        if (freebieValue <= card.getCost())
//        {
//            player.discard(card);
//            store.militiaStack.remove(store.militiaStack.size()-1);
//            militiaLabel.setText("Militias Left: " + store.militiaStack.size());
//        }
        removeCard(new Militia());
    }//GEN-LAST:event_gainMilitiaButtonActionPerformed

    private void gainMarketButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gainMarketButtonActionPerformed
//        card = new Market();
//        if (freebieValue <= card.getCost())
//        {
//            player.discard(card);
//            store.marketStack.remove(store.marketStack.size()-1);
//            marketLabel.setText("Markets Left: " + store.marketStack.size());
//        }
        removeCard(new Market());
    }//GEN-LAST:event_gainMarketButtonActionPerformed

    private void gainMineButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gainMineButtonActionPerformed
//        card = new Mine();
//        if (freebieValue <= card.getCost())
//        {
//            player.discard(card);
//            store.mineStack.remove(store.mineStack.size()-1);
//            mineLabel.setText("Mines Left: " + store.mineStack.size());
//        }
        removeCard(new Mine());
    }//GEN-LAST:event_gainMineButtonActionPerformed

    private void gainEstateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gainEstateButtonActionPerformed
//        card = new Estate();
//        if (freebieValue <= card.getCost())
//        {
//            player.discard(card);
//            store.estateStack.remove(store.estateStack.size()-1);
//            estateLabel.setText("Estates Left: " + store.estateStack.size());
//        }
        removeCard(new Estate());
    }//GEN-LAST:event_gainEstateButtonActionPerformed

    private void gainDuchyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gainDuchyButtonActionPerformed
//        card = new Dutchy();
//        if (freebieValue <= card.getCost())
//        {
//            player.discard(card);
//            store.dutchyStack.remove(store.dutchyStack.size()-1);
//            duchyLabel.setText("Duchys Left: " + store.dutchyStack.size());
//        }
        removeCard(new Dutchy());
    }//GEN-LAST:event_gainDuchyButtonActionPerformed

    private void gainCopperButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gainCopperButtonActionPerformed
//        card = new Copper();
//        if (freebieValue <= card.getCost())
//        {
//            player.discard(card);
//        }
        //No label
        removeCard(new Copper());
    }//GEN-LAST:event_gainCopperButtonActionPerformed

    private void gainMoatButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gainMoatButtonActionPerformed
//        card = new Moat();
//        if (freebieValue <= card.getCost())
//        {
//            player.discard(card);
//            store.moatStack.remove(store.moatStack.size()-1);
//            moatLabel.setText("Moats Left: " + store.moatStack.size());
//           
        removeCard(new Moat());
        {
        }    }//GEN-LAST:event_gainMoatButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel MilitiaPanel;
    private javax.swing.JLabel cellarImageLabel;
    private javax.swing.JLabel cellarLabel;
    private javax.swing.JPanel cellarPanel;
    private javax.swing.JLabel copperImageLabel;
    private javax.swing.JPanel copperPanel;
    private javax.swing.JLabel duchyImageLabel;
    private javax.swing.JLabel duchyLabel;
    private javax.swing.JPanel duchyPanel;
    private javax.swing.JLabel estateImageLabel;
    private javax.swing.JLabel estateLabel;
    private javax.swing.JPanel estatePanel;
    private javax.swing.JButton gainCellarButton;
    private javax.swing.JButton gainCopperButton;
    private javax.swing.JButton gainDuchyButton;
    private javax.swing.JButton gainEstateButton;
    private javax.swing.JButton gainGoldButton;
    private javax.swing.JButton gainMarketButton;
    private javax.swing.JButton gainMilitiaButton;
    private javax.swing.JButton gainMineButton;
    private javax.swing.JButton gainMoatButton;
    private javax.swing.JButton gainProvinceButton;
    private javax.swing.JButton gainRemodelButton;
    private javax.swing.JButton gainSilverButton;
    private javax.swing.JButton gainSmithyButton;
    private javax.swing.JButton gainVillageButton;
    private javax.swing.JButton gainWoodcutterButton;
    private javax.swing.JButton gainWorkshopButton;
    private javax.swing.JLabel goldImageLabel;
    private javax.swing.JPanel goldPanel;
    private javax.swing.JLabel marketLabel;
    private javax.swing.JPanel marketPanel;
    private javax.swing.JLabel marketsImageLabel;
    private javax.swing.JLabel militiaImageLabel;
    private javax.swing.JLabel militiaLabel;
    private javax.swing.JLabel mineImageLabel;
    private javax.swing.JLabel mineLabel;
    private javax.swing.JPanel minePanel;
    private javax.swing.JLabel moatImageLabel;
    private javax.swing.JLabel moatLabel;
    private javax.swing.JPanel moatPanel;
    private javax.swing.JLabel provinceImageLabel;
    private javax.swing.JLabel provinceLabel;
    private javax.swing.JPanel provincePanel;
    private javax.swing.JLabel remodelImageIcon;
    private javax.swing.JLabel remodelLabel;
    private javax.swing.JPanel remodelPanel;
    private javax.swing.JLabel silverImageLabel;
    private javax.swing.JPanel silverPanel;
    private javax.swing.JLabel smithyImageLabel;
    private javax.swing.JLabel smithyLabel;
    private javax.swing.JPanel smithyPanel;
    private javax.swing.JLabel villageImageLabel;
    private javax.swing.JLabel villageLabel;
    private javax.swing.JPanel villagePanel;
    private javax.swing.JLabel woodcutterImageLabel;
    private javax.swing.JLabel woodcutterLabel;
    private javax.swing.JPanel woodcutterPanel;
    private javax.swing.JLabel workshopImageLabel;
    private javax.swing.JLabel workshopLabel;
    private javax.swing.JPanel workshopPanel;
    // End of variables declaration//GEN-END:variables

    @Override
    void update() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}
